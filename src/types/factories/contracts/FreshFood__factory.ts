/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FreshFood, FreshFoodInterface } from "../../contracts/FreshFood";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_obecjectId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
      {
        internalType: "string",
        name: "_location",
        type: "string",
      },
    ],
    name: "addLog",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_origin",
        type: "string",
      },
    ],
    name: "addProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "checkProductVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getCurrentOwnerOfProduct",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getLog",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "objectId",
            type: "string",
          },
          {
            internalType: "string",
            name: "hash",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
        ],
        internalType: "struct Log[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddr",
        type: "address",
      },
    ],
    name: "getOwnerByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getOwnersOfProduct",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getProduct",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "origin",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
            ],
            internalType: "struct Owner[]",
            name: "ownerList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "objectId",
                type: "string",
              },
              {
                internalType: "string",
                name: "hash",
                type: "string",
              },
              {
                internalType: "string",
                name: "location",
                type: "string",
              },
            ],
            internalType: "struct Log[]",
            name: "logList",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
        ],
        internalType: "struct Product",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddr",
        type: "address",
      },
    ],
    name: "getProductByOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "origin",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
            ],
            internalType: "struct Owner[]",
            name: "ownerList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "objectId",
                type: "string",
              },
              {
                internalType: "string",
                name: "hash",
                type: "string",
              },
              {
                internalType: "string",
                name: "location",
                type: "string",
              },
            ],
            internalType: "struct Log[]",
            name: "logList",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
        ],
        internalType: "struct Product[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProducts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "origin",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
            ],
            internalType: "struct Owner[]",
            name: "ownerList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "objectId",
                type: "string",
              },
              {
                internalType: "string",
                name: "hash",
                type: "string",
              },
              {
                internalType: "string",
                name: "location",
                type: "string",
              },
            ],
            internalType: "struct Log[]",
            name: "logList",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
        ],
        internalType: "struct Product[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "products",
    outputs: [
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "origin",
        type: "string",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "registerOwner",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "verifyProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180604001604052806009815260200168119c995cda119bdbd960ba1b8152506040518060400160405280600381526020016223292360e91b815250816000908162000061919062000194565b50600162000070828262000194565b5050506200008d620000876200009960201b60201c565b6200009d565b61271060075562000260565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011a57607f821691505b6020821081036200013b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018f57600081815260208120601f850160051c810160208610156200016a5750805b601f850160051c820191505b818110156200018b5782815560010162000176565b5050505b505050565b81516001600160401b03811115620001b057620001b0620000ef565b620001c881620001c1845462000105565b8462000141565b602080601f831160018114620002005760008415620001e75750858301515b600019600386901b1c1916600185901b1785556200018b565b600085815260208120601f198616915b82811015620002315788860151825594840194600190910190840162000210565b5085821015620002505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61425380620002706000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c80637dd4040a1161012a578063c29b2f20116100bd578063e43059e51161008c578063e985e9c511610071578063e985e9c5146104c0578063f2fde38b146104fc578063f8d292341461050f57600080fd5b8063e43059e51461049a578063e7ab0731146104ad57600080fd5b8063c29b2f201461044c578063c87b56dd14610461578063ca2efb5514610474578063d0d0bf011461048757600080fd5b8063a22cb465116100f9578063a22cb465146103f3578063a4fde7c614610406578063b88d4fde14610419578063b9db15b41461042c57600080fd5b80637dd4040a146103bf578063893d20e8146103d25780638da5cb5b146103da57806395d89b41146103eb57600080fd5b806342842e0e116101a25780636f442154116101715780636f4421541461035357806370a0823114610373578063715018a6146103945780637acc0b201461039c57600080fd5b806342842e0e146102f457806345c45b4a14610307578063524e84621461032d5780636352211e1461034057600080fd5b8063095ea7b3116101de578063095ea7b31461029957806323b872dd146102ae5780633206b2c6146102c157806340d097c3146102e157600080fd5b806301ffc9a714610210578063022914a71461023857806306fdde0314610259578063081812fc1461026e575b600080fd5b61022361021e3660046138f3565b61052f565b60405190151581526020015b60405180910390f35b61024b61024636600461392c565b6105cc565b60405161022f929190613997565b6102616106f8565b60405161022f91906139c5565b61028161027c3660046139d8565b61078a565b6040516001600160a01b03909116815260200161022f565b6102ac6102a73660046139f1565b6107b1565b005b6102ac6102bc366004613a1b565b6108e7565b6102d46102cf3660046139d8565b61095e565b60405161022f9190613a57565b6102ac6102ef36600461392c565b610b89565b6102ac610302366004613a1b565b610bba565b6102236103153660046139d8565b60009081526008602052604090206005015460ff1690565b6102ac61033b3660046139d8565b610bd5565b61028161034e3660046139d8565b610c61565b61036661036136600461392c565b610cc6565b60405161022f9190613b26565b61038661038136600461392c565b610e26565b60405190815260200161022f565b6102ac610ec0565b6103af6103aa3660046139d8565b610ed4565b60405161022f9493929190613b39565b6103666103cd3660046139d8565b611010565b61036661107c565b6006546001600160a01b0316610281565b6102616111d1565b6102ac610401366004613b78565b6111e0565b610366610414366004613c60565b6111eb565b6102ac610427366004613cc4565b6112a4565b61043f61043a3660046139d8565b611322565b60405161022f9190613e9f565b610454611858565b60405161022f9190613eb2565b61026161046f3660046139d8565b611e26565b6102ac610482366004613c60565b611e9a565b61045461049536600461392c565b61212a565b6102ac6104a8366004613f14565b61280b565b6102ac6104bb366004613f40565b612b02565b6102236104ce366004613fc6565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102ac61050a36600461392c565b612c58565b61052261051d3660046139d8565b612ce8565b60405161022f9190613ff0565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061059257506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806105c657507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6009602052600090815260409020805481906105e790614003565b80601f016020809104026020016040519081016040528092919081815260200182805461061390614003565b80156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b50505050509080600101805461067590614003565b80601f01602080910402602001604051908101604052809291908181526020018280546106a190614003565b80156106ee5780601f106106c3576101008083540402835291602001916106ee565b820191906000526020600020905b8154815290600101906020018083116106d157829003601f168201915b5050505050905082565b60606000805461070790614003565b80601f016020809104026020016040519081016040528092919081815260200182805461073390614003565b80156107805780601f1061075557610100808354040283529160200191610780565b820191906000526020600020905b81548152906001019060200180831161076357829003601f168201915b5050505050905090565b600061079582612e76565b506000908152600460205260409020546001600160a01b031690565b60006107bc82610c61565b9050806001600160a01b0316836001600160a01b03160361084a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b0382161480610866575061086681336104ce565b6108d85760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610841565b6108e28383612eda565b505050565b6108f13382612f55565b6109535760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610841565b6108e2838383612fd4565b606060086000838152602001908152602001600020600401805480602002602001604051908101604052809291908181526020016000905b82821015610b7e57838290600052602060002090600302016040518060600160405290816000820180546109c990614003565b80601f01602080910402602001604051908101604052809291908181526020018280546109f590614003565b8015610a425780601f10610a1757610100808354040283529160200191610a42565b820191906000526020600020905b815481529060010190602001808311610a2557829003601f168201915b50505050508152602001600182018054610a5b90614003565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8790614003565b8015610ad45780601f10610aa957610100808354040283529160200191610ad4565b820191906000526020600020905b815481529060010190602001808311610ab757829003601f168201915b50505050508152602001600282018054610aed90614003565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1990614003565b8015610b665780601f10610b3b57610100808354040283529160200191610b66565b820191906000526020600020905b815481529060010190602001808311610b4957829003601f168201915b50505050508152505081526020019060010190610996565b505050509050919050565b610b916131da565b6000610b9c60075490565b9050610bac600780546001019055565b610bb68282613234565b5050565b6108e2838383604051806020016040528060008152506112a4565b33610bdf82610c61565b6001600160a01b031614610c435760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152641bd91d58dd60da1b6064820152608401610841565b6000908152600860205260409020600501805460ff19166001179055565b6000818152600260205260408120546001600160a01b0316806105c65760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610841565b60408051808201909152606080825260208201526001600160a01b038216600090815260096020526040908190208151808301909252805482908290610d0b90614003565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3790614003565b8015610d845780601f10610d5957610100808354040283529160200191610d84565b820191906000526020600020905b815481529060010190602001808311610d6757829003601f168201915b50505050508152602001600182018054610d9d90614003565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc990614003565b8015610e165780601f10610deb57610100808354040283529160200191610e16565b820191906000526020600020905b815481529060010190602001808311610df957829003601f168201915b5050505050815250509050919050565b60006001600160a01b038216610ea45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610841565b506001600160a01b031660009081526003602052604090205490565b610ec86131da565b610ed2600061324e565b565b60086020526000908152604090208054600182018054919291610ef690614003565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2290614003565b8015610f6f5780601f10610f4457610100808354040283529160200191610f6f565b820191906000526020600020905b815481529060010190602001808311610f5257829003601f168201915b505050505090806002018054610f8490614003565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb090614003565b8015610ffd5780601f10610fd257610100808354040283529160200191610ffd565b820191906000526020600020905b815481529060010190602001808311610fe057829003601f168201915b5050506005909301549192505060ff1684565b6040805180820190915260608082526020820152600082815260086020526040902060030180546110439060019061404d565b8154811061105357611053614060565b9060005260206000209060020201604051806040016040529081600082018054610d0b90614003565b6040805180820190915260608082526020820152336000908152600960205260409081902081518083019092528054829082906110b890614003565b80601f01602080910402602001604051908101604052809291908181526020018280546110e490614003565b80156111315780601f1061110657610100808354040283529160200191611131565b820191906000526020600020905b81548152906001019060200180831161111457829003601f168201915b5050505050815260200160018201805461114a90614003565b80601f016020809104026020016040519081016040528092919081815260200182805461117690614003565b80156111c35780601f10611198576101008083540402835291602001916111c3565b820191906000526020600020905b8154815290600101906020018083116111a657829003601f168201915b505050505081525050905090565b60606001805461070790614003565b610bb63383836132ad565b604080518082019091526060808252602082015282516000036112505760405162461bcd60e51b815260206004820152601660248201527f4e616d65206d757374206e6f7420626520656d707479000000000000000000006044820152606401610841565b60408051808201825284815260208082018590523360009081526009909152919091208151829190819061128490826140bc565b506020820151600182019061129990826140bc565b509195945050505050565b6112ae3383612f55565b6113105760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610841565b61131c8484848461337b565b50505050565b61135d6040518060c0016040528060008152602001606081526020016060815260200160608152602001606081526020016000151581525090565b600860008381526020019081526020016000206040518060c00160405290816000820154815260200160018201805461139590614003565b80601f01602080910402602001604051908101604052809291908181526020018280546113c190614003565b801561140e5780601f106113e35761010080835404028352916020019161140e565b820191906000526020600020905b8154815290600101906020018083116113f157829003601f168201915b5050505050815260200160028201805461142790614003565b80601f016020809104026020016040519081016040528092919081815260200182805461145390614003565b80156114a05780601f10611475576101008083540402835291602001916114a0565b820191906000526020600020905b81548152906001019060200180831161148357829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611624578382906000526020600020906002020160405180604001604052908160008201805461150190614003565b80601f016020809104026020016040519081016040528092919081815260200182805461152d90614003565b801561157a5780601f1061154f5761010080835404028352916020019161157a565b820191906000526020600020905b81548152906001019060200180831161155d57829003601f168201915b5050505050815260200160018201805461159390614003565b80601f01602080910402602001604051908101604052809291908181526020018280546115bf90614003565b801561160c5780601f106115e15761010080835404028352916020019161160c565b820191906000526020600020905b8154815290600101906020018083116115ef57829003601f168201915b505050505081525050815260200190600101906114ce565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611839578382906000526020600020906003020160405180606001604052908160008201805461168490614003565b80601f01602080910402602001604051908101604052809291908181526020018280546116b090614003565b80156116fd5780601f106116d2576101008083540402835291602001916116fd565b820191906000526020600020905b8154815290600101906020018083116116e057829003601f168201915b5050505050815260200160018201805461171690614003565b80601f016020809104026020016040519081016040528092919081815260200182805461174290614003565b801561178f5780601f106117645761010080835404028352916020019161178f565b820191906000526020600020905b81548152906001019060200180831161177257829003601f168201915b505050505081526020016002820180546117a890614003565b80601f01602080910402602001604051908101604052809291908181526020018280546117d490614003565b80156118215780601f106117f657610100808354040283529160200191611821565b820191906000526020600020905b81548152906001019060200180831161180457829003601f168201915b50505050508152505081526020019060010190611651565b505050908252506005919091015460ff16151560209091015292915050565b6060600061186560075490565b67ffffffffffffffff81111561187d5761187d613bb4565b6040519080825280602002602001820160405280156118e957816020015b6118d66040518060c0016040528060008152602001606081526020016060815260200160608152602001606081526020016000151581525090565b81526020019060019003908161189b5790505b50905060005b600754811015611e2057600860008281526020019081526020016000206040518060c00160405290816000820154815260200160018201805461193190614003565b80601f016020809104026020016040519081016040528092919081815260200182805461195d90614003565b80156119aa5780601f1061197f576101008083540402835291602001916119aa565b820191906000526020600020905b81548152906001019060200180831161198d57829003601f168201915b505050505081526020016002820180546119c390614003565b80601f01602080910402602001604051908101604052809291908181526020018280546119ef90614003565b8015611a3c5780601f10611a1157610100808354040283529160200191611a3c565b820191906000526020600020905b815481529060010190602001808311611a1f57829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611bc05783829060005260206000209060020201604051806040016040529081600082018054611a9d90614003565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac990614003565b8015611b165780601f10611aeb57610100808354040283529160200191611b16565b820191906000526020600020905b815481529060010190602001808311611af957829003601f168201915b50505050508152602001600182018054611b2f90614003565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5b90614003565b8015611ba85780601f10611b7d57610100808354040283529160200191611ba8565b820191906000526020600020905b815481529060010190602001808311611b8b57829003601f168201915b50505050508152505081526020019060010190611a6a565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611dd55783829060005260206000209060030201604051806060016040529081600082018054611c2090614003565b80601f0160208091040260200160405190810160405280929190818152602001828054611c4c90614003565b8015611c995780601f10611c6e57610100808354040283529160200191611c99565b820191906000526020600020905b815481529060010190602001808311611c7c57829003601f168201915b50505050508152602001600182018054611cb290614003565b80601f0160208091040260200160405190810160405280929190818152602001828054611cde90614003565b8015611d2b5780601f10611d0057610100808354040283529160200191611d2b565b820191906000526020600020905b815481529060010190602001808311611d0e57829003601f168201915b50505050508152602001600282018054611d4490614003565b80601f0160208091040260200160405190810160405280929190818152602001828054611d7090614003565b8015611dbd5780601f10611d9257610100808354040283529160200191611dbd565b820191906000526020600020905b815481529060010190602001808311611da057829003601f168201915b50505050508152505081526020019060010190611bed565b505050908252506005919091015460ff1615156020909101528251839083908110611e0257611e02614060565b60200260200101819052508080611e189061417c565b9150506118ef565b50919050565b6060611e3182612e76565b6000611e4860408051602081019091526000815290565b90506000815111611e685760405180602001604052806000815250611e93565b80611e72846133f9565b604051602001611e83929190614195565b6040516020818303038152906040525b9392505050565b3360009081526009602052604090208054611eb490614003565b9050600003611f055760405162461bcd60e51b815260206004820181905260248201527f596f75206d757374207265676973746572206173206f776e65722066697273746044820152606401610841565b8151151580611f145750805115155b611f865760405162461bcd60e51b815260206004820152602860248201527f50726f64756374206e616d65206f72206f726967696e206d757374206e6f742060448201527f626520656d7074790000000000000000000000000000000000000000000000006064820152608401610841565b6000611f9160075490565b9050611fa1600780546001019055565b600081815260086020526040902081815560018101611fc085826140bc565b5060028101611fcf84826140bc565b5060058101805460ff191690556000611fe733610cc6565b5190506000611ff533610cc6565b602090810151604080518082019091528481528083018290526003860180546001810182556000918252939020815192945090926002020190819061203a90826140bc565b506020820151600182019061204f90826140bc565b50506040805160a0810182526006606082018181527f637265617465000000000000000000000000000000000000000000000000000060808401819052908352835180850185528281526020818101839052808501919091528451808601865292835282810191909152928201526004860180546001810182556000918252929020815191935060039092029091019081906120eb90826140bc565b506020820151600182019061210090826140bc565b506040820151600282019061211590826140bc565b5050506121223385613234565b505050505050565b6060600061213760075490565b67ffffffffffffffff81111561214f5761214f613bb4565b6040519080825280602002602001820160405280156121bb57816020015b6121a86040518060c0016040528060008152602001606081526020016060815260200160608152602001606081526020016000151581525090565b81526020019060019003908161216d5790505b5090506000805b60075481101561272257846001600160a01b03166121df82610c61565b6001600160a01b03160361271057600860008281526020019081526020016000206040518060c00160405290816000820154815260200160018201805461222590614003565b80601f016020809104026020016040519081016040528092919081815260200182805461225190614003565b801561229e5780601f106122735761010080835404028352916020019161229e565b820191906000526020600020905b81548152906001019060200180831161228157829003601f168201915b505050505081526020016002820180546122b790614003565b80601f01602080910402602001604051908101604052809291908181526020018280546122e390614003565b80156123305780601f1061230557610100808354040283529160200191612330565b820191906000526020600020905b81548152906001019060200180831161231357829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156124b4578382906000526020600020906002020160405180604001604052908160008201805461239190614003565b80601f01602080910402602001604051908101604052809291908181526020018280546123bd90614003565b801561240a5780601f106123df5761010080835404028352916020019161240a565b820191906000526020600020905b8154815290600101906020018083116123ed57829003601f168201915b5050505050815260200160018201805461242390614003565b80601f016020809104026020016040519081016040528092919081815260200182805461244f90614003565b801561249c5780601f106124715761010080835404028352916020019161249c565b820191906000526020600020905b81548152906001019060200180831161247f57829003601f168201915b5050505050815250508152602001906001019061235e565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156126c9578382906000526020600020906003020160405180606001604052908160008201805461251490614003565b80601f016020809104026020016040519081016040528092919081815260200182805461254090614003565b801561258d5780601f106125625761010080835404028352916020019161258d565b820191906000526020600020905b81548152906001019060200180831161257057829003601f168201915b505050505081526020016001820180546125a690614003565b80601f01602080910402602001604051908101604052809291908181526020018280546125d290614003565b801561261f5780601f106125f45761010080835404028352916020019161261f565b820191906000526020600020905b81548152906001019060200180831161260257829003601f168201915b5050505050815260200160028201805461263890614003565b80601f016020809104026020016040519081016040528092919081815260200182805461266490614003565b80156126b15780601f10612686576101008083540402835291602001916126b1565b820191906000526020600020905b81548152906001019060200180831161269457829003601f168201915b505050505081525050815260200190600101906124e1565b505050908252506005919091015460ff16151560209091015283518490849081106126f6576126f6614060565b6020026020010181905250818061270c9061417c565b9250505b8061271a8161417c565b9150506121c2565b5060008167ffffffffffffffff81111561273e5761273e613bb4565b6040519080825280602002602001820160405280156127aa57816020015b6127976040518060c0016040528060008152602001606081526020016060815260200160608152602001606081526020016000151581525090565b81526020019060019003908161275c5790505b50905060005b82811015612802578381815181106127ca576127ca614060565b60200260200101518282815181106127e4576127e4614060565b602002602001018190525080806127fa9061417c565b9150506127b0565b50949350505050565b6001600160a01b0381166000908152600960205260409020805461282e90614003565b905060000361287f5760405162461bcd60e51b815260206004820152601760248201527f4e6577206f776e6572206d7573742072656769737465720000000000000000006044820152606401610841565b3361288983610c61565b6001600160a01b0316146128ed5760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152641bd91d58dd60da1b6064820152608401610841565b336001600160a01b038216036129455760405162461bcd60e51b815260206004820152601960248201527f596f752061726520616c726561647920746865206f776e6572000000000000006044820152606401610841565b60008281526008602052604090206005015460ff16156129a75760405162461bcd60e51b815260206004820152601860248201527f50726f6475637420616c726561647920766572696669656400000000000000006044820152606401610841565b60006129b282610cc6565b51905060006129c083610cc6565b602090810151600086815260088352604080822081518083019092528682528185018490526003018054600181018255908352939091208151929450909260020201908190612a0f90826140bc565b5060208201516001820190612a2490826140bc565b5050506000848152600860208181526040808420815160a081018352606081018581527f7472616e736665720000000000000000000000000000000000000000000000006080830181905290825283518085018552868152808601829052828601528351808501855295865285850152918201939093526004909201805460018101825590845292208151919260030201908190612ac290826140bc565b5060208201516001820190612ad790826140bc565b5060408201516002820190612aec90826140bc565b50505061131c612afb85610c61565b8486612fd4565b33612b0c85610c61565b6001600160a01b031614612b705760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152641bd91d58dd60da1b6064820152608401610841565b60008481526008602052604090206005015460ff1615612bd25760405162461bcd60e51b815260206004820152601860248201527f50726f6475637420616c726561647920766572696669656400000000000000006044820152606401610841565b604080516060810182528481526020808201859052818301849052600087815260088252928320600401805460018101825590845292208151919283926003909102909101908190612c2490826140bc565b5060208201516001820190612c3990826140bc565b5060408201516002820190612c4e90826140bc565b5050505050505050565b612c606131da565b6001600160a01b038116612cdc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610841565b612ce58161324e565b50565b606060086000838152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b82821015610b7e5783829060005260206000209060020201604051806040016040529081600082018054612d5390614003565b80601f0160208091040260200160405190810160405280929190818152602001828054612d7f90614003565b8015612dcc5780601f10612da157610100808354040283529160200191612dcc565b820191906000526020600020905b815481529060010190602001808311612daf57829003601f168201915b50505050508152602001600182018054612de590614003565b80601f0160208091040260200160405190810160405280929190818152602001828054612e1190614003565b8015612e5e5780601f10612e3357610100808354040283529160200191612e5e565b820191906000526020600020905b815481529060010190602001808311612e4157829003601f168201915b50505050508152505081526020019060010190612d20565b6000818152600260205260409020546001600160a01b0316612ce55760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610841565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190612f1c82610c61565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080612f6183610c61565b9050806001600160a01b0316846001600160a01b03161480612fa857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80612fcc5750836001600160a01b0316612fc18461078a565b6001600160a01b0316145b949350505050565b826001600160a01b0316612fe782610c61565b6001600160a01b03161461304b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610841565b6001600160a01b0382166130c65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610841565b826001600160a01b03166130d982610c61565b6001600160a01b03161461313d5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610841565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b03163314610ed25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610841565b610bb6828260405180602001604052806000815250613499565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03160361330e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610841565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b613386848484612fd4565b61339284848484613517565b61131c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610841565b6060600061340683613663565b600101905060008167ffffffffffffffff81111561342657613426613bb4565b6040519080825280601f01601f191660200182016040528015613450576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461345a57509392505050565b6134a38383613745565b6134b06000848484613517565b6108e25760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610841565b60006001600160a01b0384163b1561365857604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061355b9033908990889088906004016141c4565b6020604051808303816000875af1925050508015613596575060408051601f3d908101601f1916820190925261359391810190614200565b60015b61363e573d8080156135c4576040519150601f19603f3d011682016040523d82523d6000602084013e6135c9565b606091505b5080516000036136365760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610841565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612fcc565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106136ac577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106136d8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106136f657662386f26fc10000830492506010015b6305f5e100831061370e576305f5e100830492506008015b612710831061372257612710830492506004015b60648310613734576064830492506002015b600a83106105c65760010192915050565b6001600160a01b03821661379b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610841565b6000818152600260205260409020546001600160a01b0316156138005760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610841565b6000818152600260205260409020546001600160a01b0316156138655760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610841565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114612ce557600080fd5b60006020828403121561390557600080fd5b8135611e93816138dd565b80356001600160a01b038116811461392757600080fd5b919050565b60006020828403121561393e57600080fd5b611e9382613910565b60005b8381101561396257818101518382015260200161394a565b50506000910152565b60008151808452613983816020860160208601613947565b601f01601f19169290920160200192915050565b6040815260006139aa604083018561396b565b82810360208401526139bc818561396b565b95945050505050565b602081526000611e93602083018461396b565b6000602082840312156139ea57600080fd5b5035919050565b60008060408385031215613a0457600080fd5b613a0d83613910565b946020939093013593505050565b600080600060608486031215613a3057600080fd5b613a3984613910565b9250613a4760208501613910565b9150604084013590509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015613aea57603f19898403018552815160608151818652613aa48287018261396b565b915050888201518582038a870152613abc828261396b565b91505087820151915084810388860152613ad6818361396b565b968901969450505090860190600101613a7e565b509098975050505050505050565b6000815160408452613b0d604085018261396b565b9050602083015184820360208601526139bc828261396b565b602081526000611e936020830184613af8565b848152608060208201526000613b52608083018661396b565b8281036040840152613b64818661396b565b915050821515606083015295945050505050565b60008060408385031215613b8b57600080fd5b613b9483613910565b915060208301358015158114613ba957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115613be557613be5613bb4565b604051601f8501601f19908116603f01168101908282118183101715613c0d57613c0d613bb4565b81604052809350858152868686011115613c2657600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112613c5157600080fd5b611e9383833560208501613bca565b60008060408385031215613c7357600080fd5b823567ffffffffffffffff80821115613c8b57600080fd5b613c9786838701613c40565b93506020850135915080821115613cad57600080fd5b50613cba85828601613c40565b9150509250929050565b60008060008060808587031215613cda57600080fd5b613ce385613910565b9350613cf160208601613910565b925060408501359150606085013567ffffffffffffffff811115613d1457600080fd5b8501601f81018713613d2557600080fd5b613d3487823560208401613bca565b91505092959194509250565b600081518084526020808501808196508360051b8101915082860160005b85811015613d88578284038952613d76848351613af8565b98850198935090840190600101613d5e565b5091979650505050505050565b80518252600060208083015160c082860152613db460c086018261396b565b905060408085015186830382880152613dcd838261396b565b92505060608086015187840382890152613de78482613d40565b935050608086015187840360808901528381518086528686019150868160051b870101878401935060005b82811015613e7b57878203601f1901845284518051878452613e368885018261396b565b90508a8201518482038c860152613e4d828261396b565b91505088820151915083810389850152613e67818361396b565b968b0196958b019593505050600101613e12565b5060a08a01519750613e9160a08c018915159052565b9a9950505050505050505050565b602081526000611e936020830184613d95565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613f0757603f19888603018452613ef5858351613d95565b94509285019290850190600101613ed9565b5092979650505050505050565b60008060408385031215613f2757600080fd5b82359150613f3760208401613910565b90509250929050565b60008060008060808587031215613f5657600080fd5b84359350602085013567ffffffffffffffff80821115613f7557600080fd5b613f8188838901613c40565b94506040870135915080821115613f9757600080fd5b613fa388838901613c40565b93506060870135915080821115613fb957600080fd5b50613d3487828801613c40565b60008060408385031215613fd957600080fd5b613fe283613910565b9150613f3760208401613910565b602081526000611e936020830184613d40565b600181811c9082168061401757607f821691505b602082108103611e2057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156105c6576105c6614037565b634e487b7160e01b600052603260045260246000fd5b601f8211156108e257600081815260208120601f850160051c8101602086101561409d5750805b601f850160051c820191505b81811015612122578281556001016140a9565b815167ffffffffffffffff8111156140d6576140d6613bb4565b6140ea816140e48454614003565b84614076565b602080601f83116001811461411f57600084156141075750858301515b600019600386901b1c1916600185901b178555612122565b600085815260208120601f198616915b8281101561414e5788860151825594840194600190910190840161412f565b508582101561416c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001820161418e5761418e614037565b5060010190565b600083516141a7818460208801613947565b8351908301906141bb818360208801613947565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526141f6608083018461396b565b9695505050505050565b60006020828403121561421257600080fd5b8151611e93816138dd56fea26469706673582212205fc3e589ad982209fb4ab8a91de888ff46d812a4ade50c1c34b2bf94bb9a265764736f6c63430008110033";

type FreshFoodConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreshFoodConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreshFood__factory extends ContractFactory {
  constructor(...args: FreshFoodConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FreshFood> {
    return super.deploy(overrides || {}) as Promise<FreshFood>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FreshFood {
    return super.attach(address) as FreshFood;
  }
  override connect(signer: Signer): FreshFood__factory {
    return super.connect(signer) as FreshFood__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreshFoodInterface {
    return new utils.Interface(_abi) as FreshFoodInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreshFood {
    return new Contract(address, _abi, signerOrProvider) as FreshFood;
  }
}
