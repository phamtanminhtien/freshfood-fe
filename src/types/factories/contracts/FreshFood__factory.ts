/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FreshFood, FreshFoodInterface } from "../../contracts/FreshFood";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_obecjectId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
      {
        internalType: "string",
        name: "_location",
        type: "string",
      },
    ],
    name: "addLog",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_origin",
        type: "string",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "addProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "checkProductVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getCurrentOwnerOfProduct",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getLog",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "objectId",
            type: "string",
          },
          {
            internalType: "string",
            name: "hash",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
        ],
        internalType: "struct Log[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddr",
        type: "address",
      },
    ],
    name: "getOwnerByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getOwnersOfProduct",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getProduct",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "origin",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
            ],
            internalType: "struct Owner[]",
            name: "ownerList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "objectId",
                type: "string",
              },
              {
                internalType: "string",
                name: "hash",
                type: "string",
              },
              {
                internalType: "string",
                name: "location",
                type: "string",
              },
            ],
            internalType: "struct Log[]",
            name: "logList",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
        ],
        internalType: "struct Product",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddr",
        type: "address",
      },
    ],
    name: "getProductByOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "origin",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
            ],
            internalType: "struct Owner[]",
            name: "ownerList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "objectId",
                type: "string",
              },
              {
                internalType: "string",
                name: "hash",
                type: "string",
              },
              {
                internalType: "string",
                name: "location",
                type: "string",
              },
            ],
            internalType: "struct Log[]",
            name: "logList",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
        ],
        internalType: "struct Product[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProducts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "origin",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
            ],
            internalType: "struct Owner[]",
            name: "ownerList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "objectId",
                type: "string",
              },
              {
                internalType: "string",
                name: "hash",
                type: "string",
              },
              {
                internalType: "string",
                name: "location",
                type: "string",
              },
            ],
            internalType: "struct Log[]",
            name: "logList",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
        ],
        internalType: "struct Product[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "products",
    outputs: [
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "origin",
        type: "string",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "registerOwner",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "verifyProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180604001604052806009815260200168119c995cda119bdbd960ba1b8152506040518060400160405280600381526020016223292360e91b81525081600090816200006191906200018e565b5060016200007082826200018e565b5050506200008d620000876200009360201b60201c565b62000097565b6200025a565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011457607f821691505b6020821081036200013557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018957600081815260208120601f850160051c81016020861015620001645750805b601f850160051c820191505b81811015620001855782815560010162000170565b5050505b505050565b81516001600160401b03811115620001aa57620001aa620000e9565b620001c281620001bb8454620000ff565b846200013b565b602080601f831160018114620001fa5760008415620001e15750858301515b600019600386901b1c1916600185901b17855562000185565b600085815260208120601f198616915b828110156200022b578886015182559484019460019091019084016200020a565b50858210156200024a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6144f9806200026a6000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c80637acc0b201161012a578063b9db15b4116100bd578063e43059e51161008c578063e985e9c511610071578063e985e9c5146104c1578063f2fde38b146104fd578063f8d292341461051057600080fd5b8063e43059e51461049b578063e7ab0731146104ae57600080fd5b8063b9db15b414610440578063c29b2f2014610460578063c87b56dd14610475578063d0d0bf011461048857600080fd5b806395d89b41116100f957806395d89b41146103ff578063a22cb46514610407578063a4fde7c61461041a578063b88d4fde1461042d57600080fd5b80637acc0b20146103af5780637dd4040a146103d3578063893d20e8146103e65780638da5cb5b146103ee57600080fd5b806340d097c3116101a25780636352211e116101715780636352211e146103535780636f4421541461036657806370a0823114610386578063715018a6146103a757600080fd5b806340d097c3146102f457806342842e0e1461030757806345c45b4a1461031a578063524e84621461034057600080fd5b8063095ea7b3116101de578063095ea7b3146102995780630e34b00e146102ae57806323b872dd146102c15780633206b2c6146102d457600080fd5b806301ffc9a714610210578063022914a71461023857806306fdde0314610259578063081812fc1461026e575b600080fd5b61022361021e366004613b64565b610530565b60405190151581526020015b60405180910390f35b61024b610246366004613b9d565b6105cd565b60405161022f929190613c08565b6102616106f9565b60405161022f9190613c36565b61028161027c366004613c49565b61078b565b6040516001600160a01b03909116815260200161022f565b6102ac6102a7366004613c62565b6107b2565b005b6102ac6102bc366004613d38565b6108e8565b6102ac6102cf366004613dc0565b610b88565b6102e76102e2366004613c49565b610bff565b60405161022f9190613e92565b6102ac610302366004613b9d565b610e2a565b6102ac610315366004613dc0565b610e5b565b610223610328366004613c49565b60009081526008602052604090206006015460ff1690565b6102ac61034e366004613c49565b610e76565b610281610361366004613c49565b610f02565b610379610374366004613b9d565b610f67565b60405161022f9190613ed3565b610399610394366004613b9d565b6110c7565b60405190815260200161022f565b6102ac611161565b6103c26103bd366004613c49565b611175565b60405161022f959493929190613ee6565b6103796103e1366004613c49565b61133f565b6103796113ab565b6006546001600160a01b0316610281565b610261611500565b6102ac610415366004613f3a565b61150f565b610379610428366004613f76565b61151a565b6102ac61043b366004613fda565b6115d3565b61045361044e366004613c49565b611651565b60405161022f919061413d565b610468611c20565b60405161022f9190614150565b610261610483366004613c49565b612287565b610468610496366004613b9d565b6122fb565b6102ac6104a93660046141b2565b612a7c565b6102ac6104bc3660046141de565b612d73565b6102236104cf366004614264565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102ac61050b366004613b9d565b612ec9565b61052361051e366004613c49565b612f59565b60405161022f919061428e565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061059357506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806105c757507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6009602052600090815260409020805481906105e8906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610614906142a1565b80156106615780601f1061063657610100808354040283529160200191610661565b820191906000526020600020905b81548152906001019060200180831161064457829003601f168201915b505050505090806001018054610676906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546106a2906142a1565b80156106ef5780601f106106c4576101008083540402835291602001916106ef565b820191906000526020600020905b8154815290600101906020018083116106d257829003601f168201915b5050505050905082565b606060008054610708906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610734906142a1565b80156107815780601f1061075657610100808354040283529160200191610781565b820191906000526020600020905b81548152906001019060200180831161076457829003601f168201915b5050505050905090565b6000610796826130e7565b506000908152600460205260409020546001600160a01b031690565b60006107bd82610f02565b9050806001600160a01b0316836001600160a01b03160361084b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b0382161480610867575061086781336104cf565b6108d95760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610842565b6108e3838361314b565b505050565b3360009081526009602052604090208054610902906142a1565b90506000036109535760405162461bcd60e51b815260206004820181905260248201527f596f75206d757374207265676973746572206173206f776e65722066697273746044820152606401610842565b82511515806109625750815115155b6109d45760405162461bcd60e51b815260206004820152602860248201527f50726f64756374206e616d65206f72206f726967696e206d757374206e6f742060448201527f626520656d7074790000000000000000000000000000000000000000000000006064820152608401610842565b60006109df60075490565b90506109ef600780546001019055565b600081815260086020526040902081815560018101610a0e8682614323565b5060028101610a1d8582614323565b5060068101805460ff1916905560038101610a388482614323565b506000610a4433610f67565b5190506000610a5233610f67565b6020908101516040805180820190915284815280830182905260048601805460018101825560009182529390208151929450909260020201908190610a979082614323565b5060208201516001820190610aac9082614323565b50506040805160a0810182526006606082018181527f63726561746500000000000000000000000000000000000000000000000000006080840181905290835283518085018552828152602081810183905280850191909152845180860186529283528281019190915292820152600586018054600181018255600091825292902081519193506003909202909101908190610b489082614323565b5060208201516001820190610b5d9082614323565b5060408201516002820190610b729082614323565b505050610b7f33856131c6565b50505050505050565b610b9233826131e0565b610bf45760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610842565b6108e383838361325f565b606060086000838152602001908152602001600020600501805480602002602001604051908101604052809291908181526020016000905b82821015610e1f5783829060005260206000209060030201604051806060016040529081600082018054610c6a906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610c96906142a1565b8015610ce35780601f10610cb857610100808354040283529160200191610ce3565b820191906000526020600020905b815481529060010190602001808311610cc657829003601f168201915b50505050508152602001600182018054610cfc906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610d28906142a1565b8015610d755780601f10610d4a57610100808354040283529160200191610d75565b820191906000526020600020905b815481529060010190602001808311610d5857829003601f168201915b50505050508152602001600282018054610d8e906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610dba906142a1565b8015610e075780601f10610ddc57610100808354040283529160200191610e07565b820191906000526020600020905b815481529060010190602001808311610dea57829003601f168201915b50505050508152505081526020019060010190610c37565b505050509050919050565b610e32613465565b6000610e3d60075490565b9050610e4d600780546001019055565b610e5782826131c6565b5050565b6108e3838383604051806020016040528060008152506115d3565b33610e8082610f02565b6001600160a01b031614610ee45760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152641bd91d58dd60da1b6064820152608401610842565b6000908152600860205260409020600601805460ff19166001179055565b6000818152600260205260408120546001600160a01b0316806105c75760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610842565b60408051808201909152606080825260208201526001600160a01b038216600090815260096020526040908190208151808301909252805482908290610fac906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd8906142a1565b80156110255780601f10610ffa57610100808354040283529160200191611025565b820191906000526020600020905b81548152906001019060200180831161100857829003601f168201915b5050505050815260200160018201805461103e906142a1565b80601f016020809104026020016040519081016040528092919081815260200182805461106a906142a1565b80156110b75780601f1061108c576101008083540402835291602001916110b7565b820191906000526020600020905b81548152906001019060200180831161109a57829003601f168201915b5050505050815250509050919050565b60006001600160a01b0382166111455760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610842565b506001600160a01b031660009081526003602052604090205490565b611169613465565b61117360006134bf565b565b60086020526000908152604090208054600182018054919291611197906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546111c3906142a1565b80156112105780601f106111e557610100808354040283529160200191611210565b820191906000526020600020905b8154815290600101906020018083116111f357829003601f168201915b505050505090806002018054611225906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611251906142a1565b801561129e5780601f106112735761010080835404028352916020019161129e565b820191906000526020600020905b81548152906001019060200180831161128157829003601f168201915b5050505050908060030180546112b3906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546112df906142a1565b801561132c5780601f106113015761010080835404028352916020019161132c565b820191906000526020600020905b81548152906001019060200180831161130f57829003601f168201915b5050506006909301549192505060ff1685565b604080518082019091526060808252602082015260008281526008602052604090206004018054611372906001906143f9565b815481106113825761138261440c565b9060005260206000209060020201604051806040016040529081600082018054610fac906142a1565b6040805180820190915260608082526020820152336000908152600960205260409081902081518083019092528054829082906113e7906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611413906142a1565b80156114605780601f1061143557610100808354040283529160200191611460565b820191906000526020600020905b81548152906001019060200180831161144357829003601f168201915b50505050508152602001600182018054611479906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546114a5906142a1565b80156114f25780601f106114c7576101008083540402835291602001916114f2565b820191906000526020600020905b8154815290600101906020018083116114d557829003601f168201915b505050505081525050905090565b606060018054610708906142a1565b610e5733838361351e565b6040805180820190915260608082526020820152825160000361157f5760405162461bcd60e51b815260206004820152601660248201527f4e616d65206d757374206e6f7420626520656d707479000000000000000000006044820152606401610842565b6040805180820182528481526020808201859052336000908152600990915291909120815182919081906115b39082614323565b50602082015160018201906115c89082614323565b509195945050505050565b6115dd33836131e0565b61163f5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610842565b61164b848484846135ec565b50505050565b6116936040518060e001604052806000815260200160608152602001606081526020016060815260200160608152602001606081526020016000151581525090565b600860008381526020019081526020016000206040518060e0016040529081600082015481526020016001820180546116cb906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546116f7906142a1565b80156117445780601f1061171957610100808354040283529160200191611744565b820191906000526020600020905b81548152906001019060200180831161172757829003601f168201915b5050505050815260200160028201805461175d906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611789906142a1565b80156117d65780601f106117ab576101008083540402835291602001916117d6565b820191906000526020600020905b8154815290600101906020018083116117b957829003601f168201915b505050505081526020016003820180546117ef906142a1565b80601f016020809104026020016040519081016040528092919081815260200182805461181b906142a1565b80156118685780601f1061183d57610100808354040283529160200191611868565b820191906000526020600020905b81548152906001019060200180831161184b57829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156119ec57838290600052602060002090600202016040518060400160405290816000820180546118c9906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546118f5906142a1565b80156119425780601f1061191757610100808354040283529160200191611942565b820191906000526020600020905b81548152906001019060200180831161192557829003601f168201915b5050505050815260200160018201805461195b906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611987906142a1565b80156119d45780601f106119a9576101008083540402835291602001916119d4565b820191906000526020600020905b8154815290600101906020018083116119b757829003601f168201915b50505050508152505081526020019060010190611896565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015611c015783829060005260206000209060030201604051806060016040529081600082018054611a4c906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611a78906142a1565b8015611ac55780601f10611a9a57610100808354040283529160200191611ac5565b820191906000526020600020905b815481529060010190602001808311611aa857829003601f168201915b50505050508152602001600182018054611ade906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611b0a906142a1565b8015611b575780601f10611b2c57610100808354040283529160200191611b57565b820191906000526020600020905b815481529060010190602001808311611b3a57829003601f168201915b50505050508152602001600282018054611b70906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611b9c906142a1565b8015611be95780601f10611bbe57610100808354040283529160200191611be9565b820191906000526020600020905b815481529060010190602001808311611bcc57829003601f168201915b50505050508152505081526020019060010190611a19565b505050908252506006919091015460ff16151560209091015292915050565b60606000611c2d60075490565b67ffffffffffffffff811115611c4557611c45613c8c565b604051908082528060200260200182016040528015611cb857816020015b611ca56040518060e001604052806000815260200160608152602001606081526020016060815260200160608152602001606081526020016000151581525090565b815260200190600190039081611c635790505b50905060005b60075481101561228157600860008281526020019081526020016000206040518060e001604052908160008201548152602001600182018054611d00906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611d2c906142a1565b8015611d795780601f10611d4e57610100808354040283529160200191611d79565b820191906000526020600020905b815481529060010190602001808311611d5c57829003601f168201915b50505050508152602001600282018054611d92906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611dbe906142a1565b8015611e0b5780601f10611de057610100808354040283529160200191611e0b565b820191906000526020600020905b815481529060010190602001808311611dee57829003601f168201915b50505050508152602001600382018054611e24906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611e50906142a1565b8015611e9d5780601f10611e7257610100808354040283529160200191611e9d565b820191906000526020600020905b815481529060010190602001808311611e8057829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156120215783829060005260206000209060020201604051806040016040529081600082018054611efe906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611f2a906142a1565b8015611f775780601f10611f4c57610100808354040283529160200191611f77565b820191906000526020600020905b815481529060010190602001808311611f5a57829003601f168201915b50505050508152602001600182018054611f90906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054611fbc906142a1565b80156120095780601f10611fde57610100808354040283529160200191612009565b820191906000526020600020905b815481529060010190602001808311611fec57829003601f168201915b50505050508152505081526020019060010190611ecb565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156122365783829060005260206000209060030201604051806060016040529081600082018054612081906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546120ad906142a1565b80156120fa5780601f106120cf576101008083540402835291602001916120fa565b820191906000526020600020905b8154815290600101906020018083116120dd57829003601f168201915b50505050508152602001600182018054612113906142a1565b80601f016020809104026020016040519081016040528092919081815260200182805461213f906142a1565b801561218c5780601f106121615761010080835404028352916020019161218c565b820191906000526020600020905b81548152906001019060200180831161216f57829003601f168201915b505050505081526020016002820180546121a5906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546121d1906142a1565b801561221e5780601f106121f35761010080835404028352916020019161221e565b820191906000526020600020905b81548152906001019060200180831161220157829003601f168201915b5050505050815250508152602001906001019061204e565b505050908252506006919091015460ff16151560209091015282518390839081106122635761226361440c565b6020026020010181905250808061227990614422565b915050611cbe565b50919050565b6060612292826130e7565b60006122a960408051602081019091526000815290565b905060008151116122c957604051806020016040528060008152506122f4565b806122d38461366a565b6040516020016122e492919061443b565b6040516020818303038152906040525b9392505050565b6060600061230860075490565b67ffffffffffffffff81111561232057612320613c8c565b60405190808252806020026020018201604052801561239357816020015b6123806040518060e001604052806000815260200160608152602001606081526020016060815260200160608152602001606081526020016000151581525090565b81526020019060019003908161233e5790505b5090506000805b60075481101561298c57846001600160a01b03166123b782610f02565b6001600160a01b03160361297a57600860008281526020019081526020016000206040518060e0016040529081600082015481526020016001820180546123fd906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054612429906142a1565b80156124765780601f1061244b57610100808354040283529160200191612476565b820191906000526020600020905b81548152906001019060200180831161245957829003601f168201915b5050505050815260200160028201805461248f906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546124bb906142a1565b80156125085780601f106124dd57610100808354040283529160200191612508565b820191906000526020600020905b8154815290600101906020018083116124eb57829003601f168201915b50505050508152602001600382018054612521906142a1565b80601f016020809104026020016040519081016040528092919081815260200182805461254d906142a1565b801561259a5780601f1061256f5761010080835404028352916020019161259a565b820191906000526020600020905b81548152906001019060200180831161257d57829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561271e57838290600052602060002090600202016040518060400160405290816000820180546125fb906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054612627906142a1565b80156126745780601f1061264957610100808354040283529160200191612674565b820191906000526020600020905b81548152906001019060200180831161265757829003601f168201915b5050505050815260200160018201805461268d906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546126b9906142a1565b80156127065780601f106126db57610100808354040283529160200191612706565b820191906000526020600020905b8154815290600101906020018083116126e957829003601f168201915b505050505081525050815260200190600101906125c8565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015612933578382906000526020600020906003020160405180606001604052908160008201805461277e906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546127aa906142a1565b80156127f75780601f106127cc576101008083540402835291602001916127f7565b820191906000526020600020905b8154815290600101906020018083116127da57829003601f168201915b50505050508152602001600182018054612810906142a1565b80601f016020809104026020016040519081016040528092919081815260200182805461283c906142a1565b80156128895780601f1061285e57610100808354040283529160200191612889565b820191906000526020600020905b81548152906001019060200180831161286c57829003601f168201915b505050505081526020016002820180546128a2906142a1565b80601f01602080910402602001604051908101604052809291908181526020018280546128ce906142a1565b801561291b5780601f106128f05761010080835404028352916020019161291b565b820191906000526020600020905b8154815290600101906020018083116128fe57829003601f168201915b5050505050815250508152602001906001019061274b565b505050908252506006919091015460ff16151560209091015283518490849081106129605761296061440c565b6020026020010181905250818061297690614422565b9250505b8061298481614422565b91505061239a565b5060008167ffffffffffffffff8111156129a8576129a8613c8c565b604051908082528060200260200182016040528015612a1b57816020015b612a086040518060e001604052806000815260200160608152602001606081526020016060815260200160608152602001606081526020016000151581525090565b8152602001906001900390816129c65790505b50905060005b82811015612a7357838181518110612a3b57612a3b61440c565b6020026020010151828281518110612a5557612a5561440c565b60200260200101819052508080612a6b90614422565b915050612a21565b50949350505050565b6001600160a01b03811660009081526009602052604090208054612a9f906142a1565b9050600003612af05760405162461bcd60e51b815260206004820152601760248201527f4e6577206f776e6572206d7573742072656769737465720000000000000000006044820152606401610842565b33612afa83610f02565b6001600160a01b031614612b5e5760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152641bd91d58dd60da1b6064820152608401610842565b336001600160a01b03821603612bb65760405162461bcd60e51b815260206004820152601960248201527f596f752061726520616c726561647920746865206f776e6572000000000000006044820152606401610842565b60008281526008602052604090206006015460ff1615612c185760405162461bcd60e51b815260206004820152601860248201527f50726f6475637420616c726561647920766572696669656400000000000000006044820152606401610842565b6000612c2382610f67565b5190506000612c3183610f67565b602090810151600086815260088352604080822081518083019092528682528185018490526004018054600181018255908352939091208151929450909260020201908190612c809082614323565b5060208201516001820190612c959082614323565b5050506000848152600860208181526040808420815160a081018352606081018581527f7472616e736665720000000000000000000000000000000000000000000000006080830181905290825283518085018552868152808601829052828601528351808501855295865285850152918201939093526005909201805460018101825590845292208151919260030201908190612d339082614323565b5060208201516001820190612d489082614323565b5060408201516002820190612d5d9082614323565b50505061164b612d6c85610f02565b848661325f565b33612d7d85610f02565b6001600160a01b031614612de15760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152641bd91d58dd60da1b6064820152608401610842565b60008481526008602052604090206006015460ff1615612e435760405162461bcd60e51b815260206004820152601860248201527f50726f6475637420616c726561647920766572696669656400000000000000006044820152606401610842565b604080516060810182528481526020808201859052818301849052600087815260088252928320600501805460018101825590845292208151919283926003909102909101908190612e959082614323565b5060208201516001820190612eaa9082614323565b5060408201516002820190612ebf9082614323565b5050505050505050565b612ed1613465565b6001600160a01b038116612f4d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610842565b612f56816134bf565b50565b606060086000838152602001908152602001600020600401805480602002602001604051908101604052809291908181526020016000905b82821015610e1f5783829060005260206000209060020201604051806040016040529081600082018054612fc4906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054612ff0906142a1565b801561303d5780601f106130125761010080835404028352916020019161303d565b820191906000526020600020905b81548152906001019060200180831161302057829003601f168201915b50505050508152602001600182018054613056906142a1565b80601f0160208091040260200160405190810160405280929190818152602001828054613082906142a1565b80156130cf5780601f106130a4576101008083540402835291602001916130cf565b820191906000526020600020905b8154815290600101906020018083116130b257829003601f168201915b50505050508152505081526020019060010190612f91565b6000818152600260205260409020546001600160a01b0316612f565760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610842565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155819061318d82610f02565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610e5782826040518060200160405280600081525061370a565b6000806131ec83610f02565b9050806001600160a01b0316846001600160a01b0316148061323357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806132575750836001600160a01b031661324c8461078b565b6001600160a01b0316145b949350505050565b826001600160a01b031661327282610f02565b6001600160a01b0316146132d65760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610842565b6001600160a01b0382166133515760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610842565b826001600160a01b031661336482610f02565b6001600160a01b0316146133c85760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610842565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146111735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610842565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03160361357f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610842565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6135f784848461325f565b61360384848484613788565b61164b5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610842565b60606000613677836138d4565b600101905060008167ffffffffffffffff81111561369757613697613c8c565b6040519080825280601f01601f1916602001820160405280156136c1576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846136cb57509392505050565b61371483836139b6565b6137216000848484613788565b6108e35760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610842565b60006001600160a01b0384163b156138c957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906137cc90339089908890889060040161446a565b6020604051808303816000875af1925050508015613807575060408051601f3d908101601f19168201909252613804918101906144a6565b60015b6138af573d808015613835576040519150601f19603f3d011682016040523d82523d6000602084013e61383a565b606091505b5080516000036138a75760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610842565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050613257565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061391d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310613949576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061396757662386f26fc10000830492506010015b6305f5e100831061397f576305f5e100830492506008015b612710831061399357612710830492506004015b606483106139a5576064830492506002015b600a83106105c75760010192915050565b6001600160a01b038216613a0c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610842565b6000818152600260205260409020546001600160a01b031615613a715760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610842565b6000818152600260205260409020546001600160a01b031615613ad65760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610842565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114612f5657600080fd5b600060208284031215613b7657600080fd5b81356122f481613b4e565b80356001600160a01b0381168114613b9857600080fd5b919050565b600060208284031215613baf57600080fd5b6122f482613b81565b60005b83811015613bd3578181015183820152602001613bbb565b50506000910152565b60008151808452613bf4816020860160208601613bb8565b601f01601f19169290920160200192915050565b604081526000613c1b6040830185613bdc565b8281036020840152613c2d8185613bdc565b95945050505050565b6020815260006122f46020830184613bdc565b600060208284031215613c5b57600080fd5b5035919050565b60008060408385031215613c7557600080fd5b613c7e83613b81565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115613cbd57613cbd613c8c565b604051601f8501601f19908116603f01168101908282118183101715613ce557613ce5613c8c565b81604052809350858152868686011115613cfe57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112613d2957600080fd5b6122f483833560208501613ca2565b600080600060608486031215613d4d57600080fd5b833567ffffffffffffffff80821115613d6557600080fd5b613d7187838801613d18565b94506020860135915080821115613d8757600080fd5b613d9387838801613d18565b93506040860135915080821115613da957600080fd5b50613db686828701613d18565b9150509250925092565b600080600060608486031215613dd557600080fd5b613dde84613b81565b9250613dec60208501613b81565b9150604084013590509250925092565b600081518084526020808501808196508360051b8101915082860160005b85811015613e85578284038952815160608151818752613e3c82880182613bdc565b9150508682015186820388880152613e548282613bdc565b91505060408083015192508682038188015250613e718183613bdc565b9a87019a9550505090840190600101613e1a565b5091979650505050505050565b6020815260006122f46020830184613dfc565b6000815160408452613eba6040850182613bdc565b905060208301518482036020860152613c2d8282613bdc565b6020815260006122f46020830184613ea5565b85815260a060208201526000613eff60a0830187613bdc565b8281036040840152613f118187613bdc565b90508281036060840152613f258186613bdc565b91505082151560808301529695505050505050565b60008060408385031215613f4d57600080fd5b613f5683613b81565b915060208301358015158114613f6b57600080fd5b809150509250929050565b60008060408385031215613f8957600080fd5b823567ffffffffffffffff80821115613fa157600080fd5b613fad86838701613d18565b93506020850135915080821115613fc357600080fd5b50613fd085828601613d18565b9150509250929050565b60008060008060808587031215613ff057600080fd5b613ff985613b81565b935061400760208601613b81565b925060408501359150606085013567ffffffffffffffff81111561402a57600080fd5b8501601f8101871361403b57600080fd5b61404a87823560208401613ca2565b91505092959194509250565b600081518084526020808501808196508360051b8101915082860160005b85811015613e8557828403895261408c848351613ea5565b98850198935090840190600101614074565b805182526000602082015160e060208501526140bd60e0850182613bdc565b9050604083015184820360408601526140d68282613bdc565b915050606083015184820360608601526140f08282613bdc565b9150506080830151848203608086015261410a8282614056565b91505060a083015184820360a08601526141248282613dfc565b91505060c0830151151560c08501528091505092915050565b6020815260006122f4602083018461409e565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156141a557603f1988860301845261419385835161409e565b94509285019290850190600101614177565b5092979650505050505050565b600080604083850312156141c557600080fd5b823591506141d560208401613b81565b90509250929050565b600080600080608085870312156141f457600080fd5b84359350602085013567ffffffffffffffff8082111561421357600080fd5b61421f88838901613d18565b9450604087013591508082111561423557600080fd5b61424188838901613d18565b9350606087013591508082111561425757600080fd5b5061404a87828801613d18565b6000806040838503121561427757600080fd5b61428083613b81565b91506141d560208401613b81565b6020815260006122f46020830184614056565b600181811c908216806142b557607f821691505b60208210810361228157634e487b7160e01b600052602260045260246000fd5b601f8211156108e357600081815260208120601f850160051c810160208610156142fc5750805b601f850160051c820191505b8181101561431b57828155600101614308565b505050505050565b815167ffffffffffffffff81111561433d5761433d613c8c565b6143518161434b84546142a1565b846142d5565b602080601f831160018114614386576000841561436e5750858301515b600019600386901b1c1916600185901b17855561431b565b600085815260208120601f198616915b828110156143b557888601518255948401946001909101908401614396565b50858210156143d35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b818103818111156105c7576105c76143e3565b634e487b7160e01b600052603260045260246000fd5b600060018201614434576144346143e3565b5060010190565b6000835161444d818460208801613bb8565b835190830190614461818360208801613bb8565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261449c6080830184613bdc565b9695505050505050565b6000602082840312156144b857600080fd5b81516122f481613b4e56fea2646970667358221220cafa62018fa8b275aec5fa0b55e0f1d5b2ce8b5f7a99161398e731e2c378191c64736f6c63430008110033";

type FreshFoodConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreshFoodConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreshFood__factory extends ContractFactory {
  constructor(...args: FreshFoodConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FreshFood> {
    return super.deploy(overrides || {}) as Promise<FreshFood>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FreshFood {
    return super.attach(address) as FreshFood;
  }
  override connect(signer: Signer): FreshFood__factory {
    return super.connect(signer) as FreshFood__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreshFoodInterface {
    return new utils.Interface(_abi) as FreshFoodInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreshFood {
    return new Contract(address, _abi, signerOrProvider) as FreshFood;
  }
}
