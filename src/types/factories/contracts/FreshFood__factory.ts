/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FreshFood, FreshFoodInterface } from "../../contracts/FreshFood";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_obecjectId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
      {
        internalType: "string",
        name: "_location",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "addLog",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_origin",
        type: "string",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "addProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "checkProductVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getCurrentOwnerOfProduct",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getLog",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "objectId",
            type: "string",
          },
          {
            internalType: "string",
            name: "hash",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Log[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddr",
        type: "address",
      },
    ],
    name: "getOwnerByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getOwnersOfProduct",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getProduct",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "origin",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
            ],
            internalType: "struct Owner[]",
            name: "ownerList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "objectId",
                type: "string",
              },
              {
                internalType: "string",
                name: "hash",
                type: "string",
              },
              {
                internalType: "string",
                name: "location",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
            ],
            internalType: "struct Log[]",
            name: "logList",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct Product",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddr",
        type: "address",
      },
    ],
    name: "getProductByOwner",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "origin",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
            ],
            internalType: "struct Owner[]",
            name: "ownerList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "objectId",
                type: "string",
              },
              {
                internalType: "string",
                name: "hash",
                type: "string",
              },
              {
                internalType: "string",
                name: "location",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
            ],
            internalType: "struct Log[]",
            name: "logList",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct Product[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProducts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "origin",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
            ],
            internalType: "struct Owner[]",
            name: "ownerList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "objectId",
                type: "string",
              },
              {
                internalType: "string",
                name: "hash",
                type: "string",
              },
              {
                internalType: "string",
                name: "location",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
            ],
            internalType: "struct Log[]",
            name: "logList",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct Product[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "products",
    outputs: [
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "origin",
        type: "string",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "registerOwner",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Owner",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "verifyProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180604001604052806009815260200168119c995cda119bdbd960ba1b8152506040518060400160405280600381526020016223292360e91b81525081600090816200006191906200018e565b5060016200007082826200018e565b5050506200008d620000876200009360201b60201c565b62000097565b6200025a565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011457607f821691505b6020821081036200013557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018957600081815260208120601f850160051c81016020861015620001645750805b601f850160051c820191505b81811015620001855782815560010162000170565b5050505b505050565b81516001600160401b03811115620001aa57620001aa620000e9565b620001c281620001bb8454620000ff565b846200013b565b602080601f831160018114620001fa5760008415620001e15750858301515b600019600386901b1c1916600185901b17855562000185565b600085815260208120601f198616915b828110156200022b578886015182559484019460019091019084016200020a565b50858210156200024a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6144e4806200026a6000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c8063715018a61161012a578063b88d4fde116100bd578063d0d0bf011161008c578063e985e9c511610071578063e985e9c5146104c1578063f2fde38b146104fd578063f8d292341461051057600080fd5b8063d0d0bf011461049b578063e43059e5146104ae57600080fd5b8063b88d4fde14610440578063b9db15b414610453578063c29b2f2014610473578063c87b56dd1461048857600080fd5b80638da5cb5b116100f95780638da5cb5b1461040157806395d89b4114610412578063a22cb4651461041a578063a4fde7c61461042d57600080fd5b8063715018a6146103ba5780637acc0b20146103c25780637dd4040a146103e6578063893d20e8146103f957600080fd5b806340d097c3116101a25780635a10cd55116101715780635a10cd55146103535780636352211e146103665780636f4421541461037957806370a082311461039957600080fd5b806340d097c3146102f457806342842e0e1461030757806345c45b4a1461031a578063524e84621461034057600080fd5b8063095ea7b3116101de578063095ea7b3146102995780630e34b00e146102ae57806323b872dd146102c15780633206b2c6146102d457600080fd5b806301ffc9a714610210578063022914a71461023857806306fdde0314610259578063081812fc1461026e575b600080fd5b61022361021e366004613b3e565b610530565b60405190151581526020015b60405180910390f35b61024b610246366004613b77565b6105cd565b60405161022f929190613be2565b6102616106f9565b60405161022f9190613c10565b61028161027c366004613c23565b61078b565b6040516001600160a01b03909116815260200161022f565b6102ac6102a7366004613c3c565b6107b2565b005b6102ac6102bc366004613d12565b6108e8565b6102ac6102cf366004613d9a565b610b96565b6102e76102e2366004613c23565b610c0d565b60405161022f9190613e77565b6102ac610302366004613b77565b610e42565b6102ac610315366004613d9a565b610e73565b610223610328366004613c23565b60009081526008602052604090206005015460ff1690565b6102ac61034e366004613c23565b610e8e565b6102ac610361366004613e8a565b610f1a565b610281610374366004613c23565b611081565b61038c610387366004613b77565b6110e6565b60405161022f9190613f52565b6103ac6103a7366004613b77565b611246565b60405190815260200161022f565b6102ac6112e0565b6103d56103d0366004613c23565b6112f4565b60405161022f959493929190613f65565b61038c6103f4366004613c23565b6114c4565b61038c611530565b6006546001600160a01b0316610281565b610261611685565b6102ac610428366004613fb8565b611694565b61038c61043b366004613ff4565b61169f565b6102ac61044e366004614058565b611758565b610466610461366004613c23565b6117d6565b60405161022f91906141ae565b61047b611d29565b60405161022f91906141c1565b610261610496366004613c23565b61239a565b61047b6104a9366004613b77565b61240e565b6102ac6104bc366004614223565b612b99565b6102236104cf36600461424f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102ac61050b366004613b77565b612ea3565b61052361051e366004613c23565b612f33565b60405161022f9190614279565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061059357506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806105c757507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6009602052600090815260409020805481906105e89061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546106149061428c565b80156106615780601f1061063657610100808354040283529160200191610661565b820191906000526020600020905b81548152906001019060200180831161064457829003601f168201915b5050505050908060010180546106769061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546106a29061428c565b80156106ef5780601f106106c4576101008083540402835291602001916106ef565b820191906000526020600020905b8154815290600101906020018083116106d257829003601f168201915b5050505050905082565b6060600080546107089061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546107349061428c565b80156107815780601f1061075657610100808354040283529160200191610781565b820191906000526020600020905b81548152906001019060200180831161076457829003601f168201915b5050505050905090565b6000610796826130c1565b506000908152600460205260409020546001600160a01b031690565b60006107bd82611081565b9050806001600160a01b0316836001600160a01b03160361084b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b0382161480610867575061086781336104cf565b6108d95760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610842565b6108e38383613125565b505050565b33600090815260096020526040902080546109029061428c565b90506000036109535760405162461bcd60e51b815260206004820181905260248201527f596f75206d757374207265676973746572206173206f776e65722066697273746044820152606401610842565b82511515806109625750815115155b6109d45760405162461bcd60e51b815260206004820152602860248201527f50726f64756374206e616d65206f72206f726967696e206d757374206e6f742060448201527f626520656d7074790000000000000000000000000000000000000000000000006064820152608401610842565b60006109df60075490565b90506109ef600780546001019055565b600081815260086020526040902081815560018101610a0e868261430e565b5060028101610a1d858261430e565b5060058101805460ff1916905560068101610a38848261430e565b506000610a44336110e6565b5190506000610a52336110e6565b6020908101516040805180820190915284815280830182905260038601805460018101825560009182529390208151929450909260020201908190610a97908261430e565b5060208201516001820190610aac908261430e565b50506040805160c0810182526006608082018181527f637265617465000000000000000000000000000000000000000000000000000060a084018190529083528351808501855282815260208181018390528085019190915284518086018652928352828101919091529282015242606082015260048087018054600181018255600091825293902082519294509202909101908190610b4c908261430e565b5060208201516001820190610b61908261430e565b5060408201516002820190610b76908261430e565b50606082015181600301555050610b8d33856131a0565b50505050505050565b610ba033826131ba565b610c025760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610842565b6108e3838383613239565b606060086000838152602001908152602001600020600401805480602002602001604051908101604052809291908181526020016000905b82821015610e375783829060005260206000209060040201604051806080016040529081600082018054610c789061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca49061428c565b8015610cf15780601f10610cc657610100808354040283529160200191610cf1565b820191906000526020600020905b815481529060010190602001808311610cd457829003601f168201915b50505050508152602001600182018054610d0a9061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d369061428c565b8015610d835780601f10610d5857610100808354040283529160200191610d83565b820191906000526020600020905b815481529060010190602001808311610d6657829003601f168201915b50505050508152602001600282018054610d9c9061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc89061428c565b8015610e155780601f10610dea57610100808354040283529160200191610e15565b820191906000526020600020905b815481529060010190602001808311610df857829003601f168201915b5050505050815260200160038201548152505081526020019060010190610c45565b505050509050919050565b610e4a61343f565b6000610e5560075490565b9050610e65600780546001019055565b610e6f82826131a0565b5050565b6108e383838360405180602001604052806000815250611758565b33610e9882611081565b6001600160a01b031614610efc5760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152641bd91d58dd60da1b6064820152608401610842565b6000908152600860205260409020600501805460ff19166001179055565b33610f2486611081565b6001600160a01b031614610f885760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152641bd91d58dd60da1b6064820152608401610842565b60008581526008602052604090206005015460ff1615610fea5760405162461bcd60e51b815260206004820152601860248201527f50726f6475637420616c726561647920766572696669656400000000000000006044820152606401610842565b604080516080810182528581526020808201869052818301859052606082018490526000888152600882529283206004908101805460018101825590855291909320825192938493920201908190611042908261430e565b5060208201516001820190611057908261430e565b506040820151600282019061106c908261430e565b50606082015181600301555050505050505050565b6000818152600260205260408120546001600160a01b0316806105c75760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610842565b60408051808201909152606080825260208201526001600160a01b03821660009081526009602052604090819020815180830190925280548290829061112b9061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546111579061428c565b80156111a45780601f10611179576101008083540402835291602001916111a4565b820191906000526020600020905b81548152906001019060200180831161118757829003601f168201915b505050505081526020016001820180546111bd9061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546111e99061428c565b80156112365780601f1061120b57610100808354040283529160200191611236565b820191906000526020600020905b81548152906001019060200180831161121957829003601f168201915b5050505050815250509050919050565b60006001600160a01b0382166112c45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610842565b506001600160a01b031660009081526003602052604090205490565b6112e861343f565b6112f26000613499565b565b600860205260009081526040902080546001820180549192916113169061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546113429061428c565b801561138f5780601f106113645761010080835404028352916020019161138f565b820191906000526020600020905b81548152906001019060200180831161137257829003601f168201915b5050505050908060020180546113a49061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546113d09061428c565b801561141d5780601f106113f25761010080835404028352916020019161141d565b820191906000526020600020905b81548152906001019060200180831161140057829003601f168201915b5050506005840154600685018054949560ff9092169491935091506114419061428c565b80601f016020809104026020016040519081016040528092919081815260200182805461146d9061428c565b80156114ba5780601f1061148f576101008083540402835291602001916114ba565b820191906000526020600020905b81548152906001019060200180831161149d57829003601f168201915b5050505050905085565b6040805180820190915260608082526020820152600082815260086020526040902060030180546114f7906001906143e4565b81548110611507576115076143f7565b906000526020600020906002020160405180604001604052908160008201805461112b9061428c565b60408051808201909152606080825260208201523360009081526009602052604090819020815180830190925280548290829061156c9061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546115989061428c565b80156115e55780601f106115ba576101008083540402835291602001916115e5565b820191906000526020600020905b8154815290600101906020018083116115c857829003601f168201915b505050505081526020016001820180546115fe9061428c565b80601f016020809104026020016040519081016040528092919081815260200182805461162a9061428c565b80156116775780601f1061164c57610100808354040283529160200191611677565b820191906000526020600020905b81548152906001019060200180831161165a57829003601f168201915b505050505081525050905090565b6060600180546107089061428c565b610e6f3383836134f8565b604080518082019091526060808252602082015282516000036117045760405162461bcd60e51b815260206004820152601660248201527f4e616d65206d757374206e6f7420626520656d707479000000000000000000006044820152606401610842565b604080518082018252848152602080820185905233600090815260099091529190912081518291908190611738908261430e565b506020820151600182019061174d908261430e565b509195945050505050565b61176233836131ba565b6117c45760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610842565b6117d0848484846135c6565b50505050565b6118186040518060e001604052806000815260200160608152602001606081526020016060815260200160608152602001600015158152602001606081525090565b600860008381526020019081526020016000206040518060e0016040529081600082015481526020016001820180546118509061428c565b80601f016020809104026020016040519081016040528092919081815260200182805461187c9061428c565b80156118c95780601f1061189e576101008083540402835291602001916118c9565b820191906000526020600020905b8154815290600101906020018083116118ac57829003601f168201915b505050505081526020016002820180546118e29061428c565b80601f016020809104026020016040519081016040528092919081815260200182805461190e9061428c565b801561195b5780601f106119305761010080835404028352916020019161195b565b820191906000526020600020905b81548152906001019060200180831161193e57829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611adf57838290600052602060002090600202016040518060400160405290816000820180546119bc9061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546119e89061428c565b8015611a355780601f10611a0a57610100808354040283529160200191611a35565b820191906000526020600020905b815481529060010190602001808311611a1857829003601f168201915b50505050508152602001600182018054611a4e9061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054611a7a9061428c565b8015611ac75780601f10611a9c57610100808354040283529160200191611ac7565b820191906000526020600020905b815481529060010190602001808311611aaa57829003601f168201915b50505050508152505081526020019060010190611989565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611cfe5783829060005260206000209060040201604051806080016040529081600082018054611b3f9061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054611b6b9061428c565b8015611bb85780601f10611b8d57610100808354040283529160200191611bb8565b820191906000526020600020905b815481529060010190602001808311611b9b57829003601f168201915b50505050508152602001600182018054611bd19061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054611bfd9061428c565b8015611c4a5780601f10611c1f57610100808354040283529160200191611c4a565b820191906000526020600020905b815481529060010190602001808311611c2d57829003601f168201915b50505050508152602001600282018054611c639061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054611c8f9061428c565b8015611cdc5780601f10611cb157610100808354040283529160200191611cdc565b820191906000526020600020905b815481529060010190602001808311611cbf57829003601f168201915b5050505050815260200160038201548152505081526020019060010190611b0c565b50505090825250600582015460ff16151560208201526006820180546040909201916111bd9061428c565b60606000611d3660075490565b67ffffffffffffffff811115611d4e57611d4e613c66565b604051908082528060200260200182016040528015611dc157816020015b611dae6040518060e001604052806000815260200160608152602001606081526020016060815260200160608152602001600015158152602001606081525090565b815260200190600190039081611d6c5790505b50905060005b60075481101561239457600860008281526020019081526020016000206040518060e001604052908160008201548152602001600182018054611e099061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054611e359061428c565b8015611e825780601f10611e5757610100808354040283529160200191611e82565b820191906000526020600020905b815481529060010190602001808311611e6557829003601f168201915b50505050508152602001600282018054611e9b9061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054611ec79061428c565b8015611f145780601f10611ee957610100808354040283529160200191611f14565b820191906000526020600020905b815481529060010190602001808311611ef757829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156120985783829060005260206000209060020201604051806040016040529081600082018054611f759061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054611fa19061428c565b8015611fee5780601f10611fc357610100808354040283529160200191611fee565b820191906000526020600020905b815481529060010190602001808311611fd157829003601f168201915b505050505081526020016001820180546120079061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546120339061428c565b80156120805780601f1061205557610100808354040283529160200191612080565b820191906000526020600020905b81548152906001019060200180831161206357829003601f168201915b50505050508152505081526020019060010190611f42565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156122b757838290600052602060002090600402016040518060800160405290816000820180546120f89061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546121249061428c565b80156121715780601f1061214657610100808354040283529160200191612171565b820191906000526020600020905b81548152906001019060200180831161215457829003601f168201915b5050505050815260200160018201805461218a9061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546121b69061428c565b80156122035780601f106121d857610100808354040283529160200191612203565b820191906000526020600020905b8154815290600101906020018083116121e657829003601f168201915b5050505050815260200160028201805461221c9061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546122489061428c565b80156122955780601f1061226a57610100808354040283529160200191612295565b820191906000526020600020905b81548152906001019060200180831161227857829003601f168201915b50505050508152602001600382015481525050815260200190600101906120c5565b50505090825250600582015460ff16151560208201526006820180546040909201916122e29061428c565b80601f016020809104026020016040519081016040528092919081815260200182805461230e9061428c565b801561235b5780601f106123305761010080835404028352916020019161235b565b820191906000526020600020905b81548152906001019060200180831161233e57829003601f168201915b505050505081525050828281518110612376576123766143f7565b6020026020010181905250808061238c9061440d565b915050611dc7565b50919050565b60606123a5826130c1565b60006123bc60408051602081019091526000815290565b905060008151116123dc5760405180602001604052806000815250612407565b806123e684613644565b6040516020016123f7929190614426565b6040516020818303038152906040525b9392505050565b6060600061241b60075490565b67ffffffffffffffff81111561243357612433613c66565b6040519080825280602002602001820160405280156124a657816020015b6124936040518060e001604052806000815260200160608152602001606081526020016060815260200160608152602001600015158152602001606081525090565b8152602001906001900390816124515790505b5090506000805b600754811015612aa957846001600160a01b03166124ca82611081565b6001600160a01b031603612a9757600860008281526020019081526020016000206040518060e0016040529081600082015481526020016001820180546125109061428c565b80601f016020809104026020016040519081016040528092919081815260200182805461253c9061428c565b80156125895780601f1061255e57610100808354040283529160200191612589565b820191906000526020600020905b81548152906001019060200180831161256c57829003601f168201915b505050505081526020016002820180546125a29061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546125ce9061428c565b801561261b5780601f106125f05761010080835404028352916020019161261b565b820191906000526020600020905b8154815290600101906020018083116125fe57829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561279f578382906000526020600020906002020160405180604001604052908160008201805461267c9061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546126a89061428c565b80156126f55780601f106126ca576101008083540402835291602001916126f5565b820191906000526020600020905b8154815290600101906020018083116126d857829003601f168201915b5050505050815260200160018201805461270e9061428c565b80601f016020809104026020016040519081016040528092919081815260200182805461273a9061428c565b80156127875780601f1061275c57610100808354040283529160200191612787565b820191906000526020600020905b81548152906001019060200180831161276a57829003601f168201915b50505050508152505081526020019060010190612649565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156129be57838290600052602060002090600402016040518060800160405290816000820180546127ff9061428c565b80601f016020809104026020016040519081016040528092919081815260200182805461282b9061428c565b80156128785780601f1061284d57610100808354040283529160200191612878565b820191906000526020600020905b81548152906001019060200180831161285b57829003601f168201915b505050505081526020016001820180546128919061428c565b80601f01602080910402602001604051908101604052809291908181526020018280546128bd9061428c565b801561290a5780601f106128df5761010080835404028352916020019161290a565b820191906000526020600020905b8154815290600101906020018083116128ed57829003601f168201915b505050505081526020016002820180546129239061428c565b80601f016020809104026020016040519081016040528092919081815260200182805461294f9061428c565b801561299c5780601f106129715761010080835404028352916020019161299c565b820191906000526020600020905b81548152906001019060200180831161297f57829003601f168201915b50505050508152602001600382015481525050815260200190600101906127cc565b50505090825250600582015460ff16151560208201526006820180546040909201916129e99061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054612a159061428c565b8015612a625780601f10612a3757610100808354040283529160200191612a62565b820191906000526020600020905b815481529060010190602001808311612a4557829003601f168201915b505050505081525050838381518110612a7d57612a7d6143f7565b60200260200101819052508180612a939061440d565b9250505b80612aa18161440d565b9150506124ad565b5060008167ffffffffffffffff811115612ac557612ac5613c66565b604051908082528060200260200182016040528015612b3857816020015b612b256040518060e001604052806000815260200160608152602001606081526020016060815260200160608152602001600015158152602001606081525090565b815260200190600190039081612ae35790505b50905060005b82811015612b9057838181518110612b5857612b586143f7565b6020026020010151828281518110612b7257612b726143f7565b60200260200101819052508080612b889061440d565b915050612b3e565b50949350505050565b6001600160a01b03811660009081526009602052604090208054612bbc9061428c565b9050600003612c0d5760405162461bcd60e51b815260206004820152601760248201527f4e6577206f776e6572206d7573742072656769737465720000000000000000006044820152606401610842565b33612c1783611081565b6001600160a01b031614612c7b5760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732070726044820152641bd91d58dd60da1b6064820152608401610842565b336001600160a01b03821603612cd35760405162461bcd60e51b815260206004820152601960248201527f596f752061726520616c726561647920746865206f776e6572000000000000006044820152606401610842565b60008281526008602052604090206005015460ff1615612d355760405162461bcd60e51b815260206004820152601860248201527f50726f6475637420616c726561647920766572696669656400000000000000006044820152606401610842565b6000612d40826110e6565b5190506000612d4e836110e6565b602090810151600086815260088352604080822081518083019092528682528185018490526003018054600181018255908352939091208151929450909260020201908190612d9d908261430e565b5060208201516001820190612db2908261430e565b5050506000848152600860208181526040808420815160c081018352608081018581527f7472616e7366657200000000000000000000000000000000000000000000000060a0830181905290825283518085018552868152808601829052828601528351808501855295865285850152918201939093524260608201526004928301805460018101825590855291909320835191909202909101908190612e59908261430e565b5060208201516001820190612e6e908261430e565b5060408201516002820190612e83908261430e565b506060820151816003015550506117d0612e9c85611081565b8486613239565b612eab61343f565b6001600160a01b038116612f275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610842565b612f3081613499565b50565b606060086000838152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b82821015610e375783829060005260206000209060020201604051806040016040529081600082018054612f9e9061428c565b80601f0160208091040260200160405190810160405280929190818152602001828054612fca9061428c565b80156130175780601f10612fec57610100808354040283529160200191613017565b820191906000526020600020905b815481529060010190602001808311612ffa57829003601f168201915b505050505081526020016001820180546130309061428c565b80601f016020809104026020016040519081016040528092919081815260200182805461305c9061428c565b80156130a95780601f1061307e576101008083540402835291602001916130a9565b820191906000526020600020905b81548152906001019060200180831161308c57829003601f168201915b50505050508152505081526020019060010190612f6b565b6000818152600260205260409020546001600160a01b0316612f305760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610842565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155819061316782611081565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610e6f8282604051806020016040528060008152506136e4565b6000806131c683611081565b9050806001600160a01b0316846001600160a01b0316148061320d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806132315750836001600160a01b03166132268461078b565b6001600160a01b0316145b949350505050565b826001600160a01b031661324c82611081565b6001600160a01b0316146132b05760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610842565b6001600160a01b03821661332b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610842565b826001600160a01b031661333e82611081565b6001600160a01b0316146133a25760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610842565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146112f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610842565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036135595760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610842565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6135d1848484613239565b6135dd84848484613762565b6117d05760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610842565b60606000613651836138ae565b600101905060008167ffffffffffffffff81111561367157613671613c66565b6040519080825280601f01601f19166020018201604052801561369b576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846136a557509392505050565b6136ee8383613990565b6136fb6000848484613762565b6108e35760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610842565b60006001600160a01b0384163b156138a357604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906137a6903390899088908890600401614455565b6020604051808303816000875af19250505080156137e1575060408051601f3d908101601f191682019092526137de91810190614491565b60015b613889573d80801561380f576040519150601f19603f3d011682016040523d82523d6000602084013e613814565b606091505b5080516000036138815760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610842565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050613231565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106138f7577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310613923576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061394157662386f26fc10000830492506010015b6305f5e1008310613959576305f5e100830492506008015b612710831061396d57612710830492506004015b6064831061397f576064830492506002015b600a83106105c75760010192915050565b6001600160a01b0382166139e65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610842565b6000818152600260205260409020546001600160a01b031615613a4b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610842565b6000818152600260205260409020546001600160a01b031615613ab05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610842565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114612f3057600080fd5b600060208284031215613b5057600080fd5b813561240781613b28565b80356001600160a01b0381168114613b7257600080fd5b919050565b600060208284031215613b8957600080fd5b61240782613b5b565b60005b83811015613bad578181015183820152602001613b95565b50506000910152565b60008151808452613bce816020860160208601613b92565b601f01601f19169290920160200192915050565b604081526000613bf56040830185613bb6565b8281036020840152613c078185613bb6565b95945050505050565b6020815260006124076020830184613bb6565b600060208284031215613c3557600080fd5b5035919050565b60008060408385031215613c4f57600080fd5b613c5883613b5b565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115613c9757613c97613c66565b604051601f8501601f19908116603f01168101908282118183101715613cbf57613cbf613c66565b81604052809350858152868686011115613cd857600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112613d0357600080fd5b61240783833560208501613c7c565b600080600060608486031215613d2757600080fd5b833567ffffffffffffffff80821115613d3f57600080fd5b613d4b87838801613cf2565b94506020860135915080821115613d6157600080fd5b613d6d87838801613cf2565b93506040860135915080821115613d8357600080fd5b50613d9086828701613cf2565b9150509250925092565b600080600060608486031215613daf57600080fd5b613db884613b5b565b9250613dc660208501613b5b565b9150604084013590509250925092565b600081518084526020808501808196508360051b8101915082860160005b85811015613e6a578284038952815160808151818752613e1682880182613bb6565b9150508682015186820388880152613e2e8282613bb6565b91505060408083015187830382890152613e488382613bb6565b6060948501519890940197909752505098850198935090840190600101613df4565b5091979650505050505050565b6020815260006124076020830184613dd6565b600080600080600060a08688031215613ea257600080fd5b85359450602086013567ffffffffffffffff80821115613ec157600080fd5b613ecd89838a01613cf2565b95506040880135915080821115613ee357600080fd5b613eef89838a01613cf2565b94506060880135915080821115613f0557600080fd5b50613f1288828901613cf2565b95989497509295608001359392505050565b6000815160408452613f396040850182613bb6565b905060208301518482036020860152613c078282613bb6565b6020815260006124076020830184613f24565b85815260a060208201526000613f7e60a0830187613bb6565b8281036040840152613f908187613bb6565b905084151560608401528281036080840152613fac8185613bb6565b98975050505050505050565b60008060408385031215613fcb57600080fd5b613fd483613b5b565b915060208301358015158114613fe957600080fd5b809150509250929050565b6000806040838503121561400757600080fd5b823567ffffffffffffffff8082111561401f57600080fd5b61402b86838701613cf2565b9350602085013591508082111561404157600080fd5b5061404e85828601613cf2565b9150509250929050565b6000806000806080858703121561406e57600080fd5b61407785613b5b565b935061408560208601613b5b565b925060408501359150606085013567ffffffffffffffff8111156140a857600080fd5b8501601f810187136140b957600080fd5b6140c887823560208401613c7c565b91505092959194509250565b600081518084526020808501808196508360051b8101915082860160005b85811015613e6a57828403895261410a848351613f24565b988501989350908401906001016140f2565b805182526000602082015160e0602085015261413b60e0850182613bb6565b9050604083015184820360408601526141548282613bb6565b9150506060830151848203606086015261416e82826140d4565b915050608083015184820360808601526141888282613dd6565b91505060a0830151151560a085015260c083015184820360c0860152613c078282613bb6565b602081526000612407602083018461411c565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561421657603f1988860301845261420485835161411c565b945092850192908501906001016141e8565b5092979650505050505050565b6000806040838503121561423657600080fd5b8235915061424660208401613b5b565b90509250929050565b6000806040838503121561426257600080fd5b61426b83613b5b565b915061424660208401613b5b565b60208152600061240760208301846140d4565b600181811c908216806142a057607f821691505b60208210810361239457634e487b7160e01b600052602260045260246000fd5b601f8211156108e357600081815260208120601f850160051c810160208610156142e75750805b601f850160051c820191505b81811015614306578281556001016142f3565b505050505050565b815167ffffffffffffffff81111561432857614328613c66565b61433c81614336845461428c565b846142c0565b602080601f83116001811461437157600084156143595750858301515b600019600386901b1c1916600185901b178555614306565b600085815260208120601f198616915b828110156143a057888601518255948401946001909101908401614381565b50858210156143be5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b818103818111156105c7576105c76143ce565b634e487b7160e01b600052603260045260246000fd5b60006001820161441f5761441f6143ce565b5060010190565b60008351614438818460208801613b92565b83519083019061444c818360208801613b92565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526144876080830184613bb6565b9695505050505050565b6000602082840312156144a357600080fd5b815161240781613b2856fea2646970667358221220a4c3fb055fbde08cf16dbafb933e54bec4edf20d64ee028b0400d8b4d8575f1b64736f6c63430008110033";

type FreshFoodConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreshFoodConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreshFood__factory extends ContractFactory {
  constructor(...args: FreshFoodConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FreshFood> {
    return super.deploy(overrides || {}) as Promise<FreshFood>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FreshFood {
    return super.attach(address) as FreshFood;
  }
  override connect(signer: Signer): FreshFood__factory {
    return super.connect(signer) as FreshFood__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreshFoodInterface {
    return new utils.Interface(_abi) as FreshFoodInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreshFood {
    return new Contract(address, _abi, signerOrProvider) as FreshFood;
  }
}
